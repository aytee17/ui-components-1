// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<VerticalTimelineEvent /> should render a vertical timeline event 1`] = `
.c0 {
  margin: 40px 0;
  position: relative;
}

.c0:first-child {
  margin-top: 0;
}

.c0:last-child {
  margin-bottom: 0;
}

.c2 {
  position: absolute;
  width: auto;
  height: 0;
  left: 88px;
  top: 12px;
}

.c2 > * {
  top: -50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
}

.c1 {
  text-align: right;
  color: #667380;
  position: absolute;
  width: 4rem;
  font-size: 14px;
  top: 6px;
  line-height: 1;
}

.c3 {
  border: 2px solid #E1E6EB;
  position: absolute;
  left: 50%;
  display: inline-block;
  width: 1rem;
  height: 1rem;
  border-radius: 50%;
  background: white;
}

.c4 {
  margin-left: 7rem;
}

<VerticalTimelineEvent
  eventDate="21 Apr"
>
  <styled.div
    className="vertical-timeline-event"
  >
    <StyledComponent
      className="vertical-timeline-event"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-jlyJG",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  margin: 40px 0;
  position: relative;

  &:first-child {
    margin-top: 0;
  }

  &:last-child {
    margin-bottom: 0;
  }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-jlyJG",
          "target": "div",
          "toString": [Function],
          "usesTheme": false,
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0 vertical-timeline-event"
      >
        <styled.span>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-csuQGl",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  text-align: right;
  color: ",
                    "#667380",
                    ";
  position: absolute;
  width: 4rem;
  font-size: 14px;
  top: 6px;
  line-height: 1;
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-csuQGl",
                "target": "span",
                "toString": [Function],
                "usesTheme": false,
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="c1"
            >
              21 Apr
            </span>
          </StyledComponent>
        </styled.span>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gipzik",
                  "isStatic": false,
                  "lastClassName": "c2",
                  "rules": Array [
                    "
  position: absolute;
  width: auto;
  height: 0;
  left: 88px;
  top: 12px;

  > * {
    top: -50%;
    transform: translate(-50%, -50%);
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gipzik",
                "target": "div",
                "toString": [Function],
                "usesTheme": false,
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c2"
            >
              <styled.span>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-Rmtcm",
                        "isStatic": false,
                        "lastClassName": "c3",
                        "rules": Array [
                          "
  border: 2px solid ",
                          "#E1E6EB",
                          ";
  position: absolute;
  left: 50%;
  display: inline-block;
  width: 1rem;
  height: 1rem;
  border-radius: 50%;
  background: white;
",
                        ],
                      },
                      "displayName": "styled.span",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-Rmtcm",
                      "target": "span",
                      "toString": [Function],
                      "usesTheme": false,
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <span
                    className="c3"
                  />
                </StyledComponent>
              </styled.span>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bRBYWo",
                  "isStatic": false,
                  "lastClassName": "c4",
                  "rules": Array [
                    "
  margin-left: 7rem;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bRBYWo",
                "target": "div",
                "toString": [Function],
                "usesTheme": false,
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c4"
            >
              Hey this is the child content of the event!
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</VerticalTimelineEvent>
`;

exports[`<VerticalTimelineEvent /> should render a vertical timeline event with a custom event marker 1`] = `
.c0 {
  margin: 40px 0;
  position: relative;
}

.c0:first-child {
  margin-top: 0;
}

.c0:last-child {
  margin-bottom: 0;
}

.c2 {
  position: absolute;
  width: auto;
  height: 0;
  left: 88px;
  top: 12px;
}

.c2 > * {
  top: -50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
}

.c1 {
  text-align: right;
  color: #667380;
  position: absolute;
  width: 4rem;
  font-size: 14px;
  top: 6px;
  line-height: 1;
}

.c3 {
  margin-left: 7rem;
}

<VerticalTimelineEvent
  markerComponent={
    <Avatar
      initials="JW"
      size="small"
    />
  }
>
  <styled.div
    className="vertical-timeline-event"
  >
    <StyledComponent
      className="vertical-timeline-event"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-jlyJG",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  margin: 40px 0;
  position: relative;

  &:first-child {
    margin-top: 0;
  }

  &:last-child {
    margin-bottom: 0;
  }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-jlyJG",
          "target": "div",
          "toString": [Function],
          "usesTheme": false,
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0 vertical-timeline-event"
      >
        <styled.span>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-csuQGl",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  text-align: right;
  color: ",
                    "#667380",
                    ";
  position: absolute;
  width: 4rem;
  font-size: 14px;
  top: 6px;
  line-height: 1;
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-csuQGl",
                "target": "span",
                "toString": [Function],
                "usesTheme": false,
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="c1"
            />
          </StyledComponent>
        </styled.span>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gipzik",
                  "isStatic": false,
                  "lastClassName": "c2",
                  "rules": Array [
                    "
  position: absolute;
  width: auto;
  height: 0;
  left: 88px;
  top: 12px;

  > * {
    top: -50%;
    transform: translate(-50%, -50%);
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gipzik",
                "target": "div",
                "toString": [Function],
                "usesTheme": false,
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c2"
            >
              <Avatar
                initials="JW"
                size="small"
              >
                <div
                  className="Avatar avatar-small"
                >
                  <div
                    className="avatar-inner-container"
                    onClick={[Function]}
                  >
                    <div
                      className="avatar-initials-container"
                    >
                      <span
                        className="avatar-initials"
                      >
                        JW
                      </span>
                    </div>
                  </div>
                </div>
              </Avatar>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bRBYWo",
                  "isStatic": false,
                  "lastClassName": "c3",
                  "rules": Array [
                    "
  margin-left: 7rem;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bRBYWo",
                "target": "div",
                "toString": [Function],
                "usesTheme": false,
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c3"
            >
              Hey this is the child content of the event!
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</VerticalTimelineEvent>
`;

exports[`<VerticalTimelineEvent /> should render a vertical timeline event without an event date 1`] = `
.c0 {
  margin: 40px 0;
  position: relative;
}

.c0:first-child {
  margin-top: 0;
}

.c0:last-child {
  margin-bottom: 0;
}

.c2 {
  position: absolute;
  width: auto;
  height: 0;
  left: 88px;
  top: 12px;
}

.c2 > * {
  top: -50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
}

.c1 {
  text-align: right;
  color: #667380;
  position: absolute;
  width: 4rem;
  font-size: 14px;
  top: 6px;
  line-height: 1;
}

.c3 {
  border: 2px solid #E1E6EB;
  position: absolute;
  left: 50%;
  display: inline-block;
  width: 1rem;
  height: 1rem;
  border-radius: 50%;
  background: white;
}

.c4 {
  margin-left: 7rem;
}

<VerticalTimelineEvent>
  <styled.div
    className="vertical-timeline-event"
  >
    <StyledComponent
      className="vertical-timeline-event"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-jlyJG",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  margin: 40px 0;
  position: relative;

  &:first-child {
    margin-top: 0;
  }

  &:last-child {
    margin-bottom: 0;
  }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-jlyJG",
          "target": "div",
          "toString": [Function],
          "usesTheme": false,
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0 vertical-timeline-event"
      >
        <styled.span>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-csuQGl",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  text-align: right;
  color: ",
                    "#667380",
                    ";
  position: absolute;
  width: 4rem;
  font-size: 14px;
  top: 6px;
  line-height: 1;
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-csuQGl",
                "target": "span",
                "toString": [Function],
                "usesTheme": false,
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="c1"
            />
          </StyledComponent>
        </styled.span>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gipzik",
                  "isStatic": false,
                  "lastClassName": "c2",
                  "rules": Array [
                    "
  position: absolute;
  width: auto;
  height: 0;
  left: 88px;
  top: 12px;

  > * {
    top: -50%;
    transform: translate(-50%, -50%);
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gipzik",
                "target": "div",
                "toString": [Function],
                "usesTheme": false,
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c2"
            >
              <styled.span>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-Rmtcm",
                        "isStatic": false,
                        "lastClassName": "c3",
                        "rules": Array [
                          "
  border: 2px solid ",
                          "#E1E6EB",
                          ";
  position: absolute;
  left: 50%;
  display: inline-block;
  width: 1rem;
  height: 1rem;
  border-radius: 50%;
  background: white;
",
                        ],
                      },
                      "displayName": "styled.span",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-Rmtcm",
                      "target": "span",
                      "toString": [Function],
                      "usesTheme": false,
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <span
                    className="c3"
                  />
                </StyledComponent>
              </styled.span>
            </div>
          </StyledComponent>
        </styled.div>
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bRBYWo",
                  "isStatic": false,
                  "lastClassName": "c4",
                  "rules": Array [
                    "
  margin-left: 7rem;
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bRBYWo",
                "target": "div",
                "toString": [Function],
                "usesTheme": false,
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c4"
            >
              Hey this is the child content of the event!
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</VerticalTimelineEvent>
`;
